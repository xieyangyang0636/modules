/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package cn.yano.modules.modal.bean.avro;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class GeneralNewsInfo extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 7860642415576640755L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"GeneralNewsInfo\",\"namespace\":\"com.hundsun.rcmd.bean.avro\",\"fields\":[{\"name\":\"rowkey\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"],\"default\":\"null\"},{\"name\":\"news_repository_id\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"],\"default\":\"null\"},{\"name\":\"news_id\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"],\"default\":\"null\"},{\"name\":\"publish_time\",\"type\":\"long\"},{\"name\":\"update_time\",\"type\":\"long\"},{\"name\":\"media\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"],\"default\":\"null\"},{\"name\":\"source\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"],\"default\":\"null\"},{\"name\":\"category\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"],\"default\":\"null\"},{\"name\":\"title\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"],\"default\":\"null\"},{\"name\":\"short_title\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"],\"default\":\"null\"},{\"name\":\"content\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"],\"default\":\"null\"},{\"name\":\"summary\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"],\"default\":\"null\"},{\"name\":\"url\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"],\"default\":\"null\"},{\"name\":\"record_date\",\"type\":\"long\"},{\"name\":\"author\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"],\"default\":\"null\"},{\"name\":\"writer\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"],\"default\":\"null\"},{\"name\":\"category_code\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"],\"default\":\"null\"},{\"name\":\"area_code\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"],\"default\":\"null\"},{\"name\":\"level\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"],\"default\":\"null\"},{\"name\":\"images\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"],\"default\":\"null\"},{\"name\":\"stocks\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"],\"default\":\"null\"},{\"name\":\"tags\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"],\"default\":\"null\"},{\"name\":\"topic\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"],\"default\":\"null\"},{\"name\":\"valid\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"],\"default\":\"null\"},{\"name\":\"emotion_score\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"],\"default\":\"null\"},{\"name\":\"coefficient\",\"type\":\"double\"},{\"name\":\"type\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"],\"default\":\"null\"},{\"name\":\"field1\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"],\"default\":\"null\"},{\"name\":\"field2\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"],\"default\":\"null\"},{\"name\":\"field3\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"],\"default\":\"null\"},{\"name\":\"field4\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"],\"default\":\"null\"},{\"name\":\"field5\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"],\"default\":\"null\"},{\"name\":\"field6\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"],\"default\":\"null\"},{\"name\":\"field7\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"],\"default\":\"null\"},{\"name\":\"field8\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"],\"default\":\"null\"},{\"name\":\"field9\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"],\"default\":\"null\"},{\"name\":\"field10\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"],\"default\":\"null\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public String rowkey;
  @Deprecated public String news_repository_id;
  @Deprecated public String news_id;
  @Deprecated public long publish_time;
  @Deprecated public long update_time;
  @Deprecated public String media;
  @Deprecated public String source;
  @Deprecated public String category;
  @Deprecated public String title;
  @Deprecated public String short_title;
  @Deprecated public String content;
  @Deprecated public String summary;
  @Deprecated public String url;
  @Deprecated public long record_date;
  @Deprecated public String author;
  @Deprecated public String writer;
  @Deprecated public String category_code;
  @Deprecated public String area_code;
  @Deprecated public String level;
  @Deprecated public String images;
  @Deprecated public String stocks;
  @Deprecated public String tags;
  @Deprecated public String topic;
  @Deprecated public String valid;
  @Deprecated public String emotion_score;
  @Deprecated public double coefficient;
  @Deprecated public String type;
  @Deprecated public String field1;
  @Deprecated public String field2;
  @Deprecated public String field3;
  @Deprecated public String field4;
  @Deprecated public String field5;
  @Deprecated public String field6;
  @Deprecated public String field7;
  @Deprecated public String field8;
  @Deprecated public String field9;
  @Deprecated public String field10;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public GeneralNewsInfo() {}

  /**
   * All-args constructor.
   * @param rowkey The new value for rowkey
   * @param news_repository_id The new value for news_repository_id
   * @param news_id The new value for news_id
   * @param publish_time The new value for publish_time
   * @param update_time The new value for update_time
   * @param media The new value for media
   * @param source The new value for source
   * @param category The new value for category
   * @param title The new value for title
   * @param short_title The new value for short_title
   * @param content The new value for content
   * @param summary The new value for summary
   * @param url The new value for url
   * @param record_date The new value for record_date
   * @param author The new value for author
   * @param writer The new value for writer
   * @param category_code The new value for category_code
   * @param area_code The new value for area_code
   * @param level The new value for level
   * @param images The new value for images
   * @param stocks The new value for stocks
   * @param tags The new value for tags
   * @param topic The new value for topic
   * @param valid The new value for valid
   * @param emotion_score The new value for emotion_score
   * @param coefficient The new value for coefficient
   * @param type The new value for type
   * @param field1 The new value for field1
   * @param field2 The new value for field2
   * @param field3 The new value for field3
   * @param field4 The new value for field4
   * @param field5 The new value for field5
   * @param field6 The new value for field6
   * @param field7 The new value for field7
   * @param field8 The new value for field8
   * @param field9 The new value for field9
   * @param field10 The new value for field10
   */
  public GeneralNewsInfo(String rowkey, String news_repository_id, String news_id, Long publish_time, Long update_time, String media, String source, String category, String title, String short_title, String content, String summary, String url, Long record_date, String author, String writer, String category_code, String area_code, String level, String images, String stocks, String tags, String topic, String valid, String emotion_score, Double coefficient, String type, String field1, String field2, String field3, String field4, String field5, String field6, String field7, String field8, String field9, String field10) {
    this.rowkey = rowkey;
    this.news_repository_id = news_repository_id;
    this.news_id = news_id;
    this.publish_time = publish_time;
    this.update_time = update_time;
    this.media = media;
    this.source = source;
    this.category = category;
    this.title = title;
    this.short_title = short_title;
    this.content = content;
    this.summary = summary;
    this.url = url;
    this.record_date = record_date;
    this.author = author;
    this.writer = writer;
    this.category_code = category_code;
    this.area_code = area_code;
    this.level = level;
    this.images = images;
    this.stocks = stocks;
    this.tags = tags;
    this.topic = topic;
    this.valid = valid;
    this.emotion_score = emotion_score;
    this.coefficient = coefficient;
    this.type = type;
    this.field1 = field1;
    this.field2 = field2;
    this.field3 = field3;
    this.field4 = field4;
    this.field5 = field5;
    this.field6 = field6;
    this.field7 = field7;
    this.field8 = field8;
    this.field9 = field9;
    this.field10 = field10;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public Object get(int field$) {
    switch (field$) {
    case 0: return rowkey;
    case 1: return news_repository_id;
    case 2: return news_id;
    case 3: return publish_time;
    case 4: return update_time;
    case 5: return media;
    case 6: return source;
    case 7: return category;
    case 8: return title;
    case 9: return short_title;
    case 10: return content;
    case 11: return summary;
    case 12: return url;
    case 13: return record_date;
    case 14: return author;
    case 15: return writer;
    case 16: return category_code;
    case 17: return area_code;
    case 18: return level;
    case 19: return images;
    case 20: return stocks;
    case 21: return tags;
    case 22: return topic;
    case 23: return valid;
    case 24: return emotion_score;
    case 25: return coefficient;
    case 26: return type;
    case 27: return field1;
    case 28: return field2;
    case 29: return field3;
    case 30: return field4;
    case 31: return field5;
    case 32: return field6;
    case 33: return field7;
    case 34: return field8;
    case 35: return field9;
    case 36: return field10;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, Object value$) {
    switch (field$) {
    case 0: rowkey = (String)value$; break;
    case 1: news_repository_id = (String)value$; break;
    case 2: news_id = (String)value$; break;
    case 3: publish_time = (Long)value$; break;
    case 4: update_time = (Long)value$; break;
    case 5: media = (String)value$; break;
    case 6: source = (String)value$; break;
    case 7: category = (String)value$; break;
    case 8: title = (String)value$; break;
    case 9: short_title = (String)value$; break;
    case 10: content = (String)value$; break;
    case 11: summary = (String)value$; break;
    case 12: url = (String)value$; break;
    case 13: record_date = (Long)value$; break;
    case 14: author = (String)value$; break;
    case 15: writer = (String)value$; break;
    case 16: category_code = (String)value$; break;
    case 17: area_code = (String)value$; break;
    case 18: level = (String)value$; break;
    case 19: images = (String)value$; break;
    case 20: stocks = (String)value$; break;
    case 21: tags = (String)value$; break;
    case 22: topic = (String)value$; break;
    case 23: valid = (String)value$; break;
    case 24: emotion_score = (String)value$; break;
    case 25: coefficient = (Double)value$; break;
    case 26: type = (String)value$; break;
    case 27: field1 = (String)value$; break;
    case 28: field2 = (String)value$; break;
    case 29: field3 = (String)value$; break;
    case 30: field4 = (String)value$; break;
    case 31: field5 = (String)value$; break;
    case 32: field6 = (String)value$; break;
    case 33: field7 = (String)value$; break;
    case 34: field8 = (String)value$; break;
    case 35: field9 = (String)value$; break;
    case 36: field10 = (String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'rowkey' field.
   * @return The value of the 'rowkey' field.
   */
  public String getRowkey() {
    return rowkey;
  }

  /**
   * Sets the value of the 'rowkey' field.
   * @param value the value to set.
   */
  public void setRowkey(String value) {
    this.rowkey = value;
  }

  /**
   * Gets the value of the 'news_repository_id' field.
   * @return The value of the 'news_repository_id' field.
   */
  public String getNewsRepositoryId() {
    return news_repository_id;
  }

  /**
   * Sets the value of the 'news_repository_id' field.
   * @param value the value to set.
   */
  public void setNewsRepositoryId(String value) {
    this.news_repository_id = value;
  }

  /**
   * Gets the value of the 'news_id' field.
   * @return The value of the 'news_id' field.
   */
  public String getNewsId() {
    return news_id;
  }

  /**
   * Sets the value of the 'news_id' field.
   * @param value the value to set.
   */
  public void setNewsId(String value) {
    this.news_id = value;
  }

  /**
   * Gets the value of the 'publish_time' field.
   * @return The value of the 'publish_time' field.
   */
  public Long getPublishTime() {
    return publish_time;
  }

  /**
   * Sets the value of the 'publish_time' field.
   * @param value the value to set.
   */
  public void setPublishTime(Long value) {
    this.publish_time = value;
  }

  /**
   * Gets the value of the 'update_time' field.
   * @return The value of the 'update_time' field.
   */
  public Long getUpdateTime() {
    return update_time;
  }

  /**
   * Sets the value of the 'update_time' field.
   * @param value the value to set.
   */
  public void setUpdateTime(Long value) {
    this.update_time = value;
  }

  /**
   * Gets the value of the 'media' field.
   * @return The value of the 'media' field.
   */
  public String getMedia() {
    return media;
  }

  /**
   * Sets the value of the 'media' field.
   * @param value the value to set.
   */
  public void setMedia(String value) {
    this.media = value;
  }

  /**
   * Gets the value of the 'source' field.
   * @return The value of the 'source' field.
   */
  public String getSource() {
    return source;
  }

  /**
   * Sets the value of the 'source' field.
   * @param value the value to set.
   */
  public void setSource(String value) {
    this.source = value;
  }

  /**
   * Gets the value of the 'category' field.
   * @return The value of the 'category' field.
   */
  public String getCategory() {
    return category;
  }

  /**
   * Sets the value of the 'category' field.
   * @param value the value to set.
   */
  public void setCategory(String value) {
    this.category = value;
  }

  /**
   * Gets the value of the 'title' field.
   * @return The value of the 'title' field.
   */
  public String getTitle() {
    return title;
  }

  /**
   * Sets the value of the 'title' field.
   * @param value the value to set.
   */
  public void setTitle(String value) {
    this.title = value;
  }

  /**
   * Gets the value of the 'short_title' field.
   * @return The value of the 'short_title' field.
   */
  public String getShortTitle() {
    return short_title;
  }

  /**
   * Sets the value of the 'short_title' field.
   * @param value the value to set.
   */
  public void setShortTitle(String value) {
    this.short_title = value;
  }

  /**
   * Gets the value of the 'content' field.
   * @return The value of the 'content' field.
   */
  public String getContent() {
    return content;
  }

  /**
   * Sets the value of the 'content' field.
   * @param value the value to set.
   */
  public void setContent(String value) {
    this.content = value;
  }

  /**
   * Gets the value of the 'summary' field.
   * @return The value of the 'summary' field.
   */
  public String getSummary() {
    return summary;
  }

  /**
   * Sets the value of the 'summary' field.
   * @param value the value to set.
   */
  public void setSummary(String value) {
    this.summary = value;
  }

  /**
   * Gets the value of the 'url' field.
   * @return The value of the 'url' field.
   */
  public String getUrl() {
    return url;
  }

  /**
   * Sets the value of the 'url' field.
   * @param value the value to set.
   */
  public void setUrl(String value) {
    this.url = value;
  }

  /**
   * Gets the value of the 'record_date' field.
   * @return The value of the 'record_date' field.
   */
  public Long getRecordDate() {
    return record_date;
  }

  /**
   * Sets the value of the 'record_date' field.
   * @param value the value to set.
   */
  public void setRecordDate(Long value) {
    this.record_date = value;
  }

  /**
   * Gets the value of the 'author' field.
   * @return The value of the 'author' field.
   */
  public String getAuthor() {
    return author;
  }

  /**
   * Sets the value of the 'author' field.
   * @param value the value to set.
   */
  public void setAuthor(String value) {
    this.author = value;
  }

  /**
   * Gets the value of the 'writer' field.
   * @return The value of the 'writer' field.
   */
  public String getWriter() {
    return writer;
  }

  /**
   * Sets the value of the 'writer' field.
   * @param value the value to set.
   */
  public void setWriter(String value) {
    this.writer = value;
  }

  /**
   * Gets the value of the 'category_code' field.
   * @return The value of the 'category_code' field.
   */
  public String getCategoryCode() {
    return category_code;
  }

  /**
   * Sets the value of the 'category_code' field.
   * @param value the value to set.
   */
  public void setCategoryCode(String value) {
    this.category_code = value;
  }

  /**
   * Gets the value of the 'area_code' field.
   * @return The value of the 'area_code' field.
   */
  public String getAreaCode() {
    return area_code;
  }

  /**
   * Sets the value of the 'area_code' field.
   * @param value the value to set.
   */
  public void setAreaCode(String value) {
    this.area_code = value;
  }

  /**
   * Gets the value of the 'level' field.
   * @return The value of the 'level' field.
   */
  public String getLevel() {
    return level;
  }

  /**
   * Sets the value of the 'level' field.
   * @param value the value to set.
   */
  public void setLevel(String value) {
    this.level = value;
  }

  /**
   * Gets the value of the 'images' field.
   * @return The value of the 'images' field.
   */
  public String getImages() {
    return images;
  }

  /**
   * Sets the value of the 'images' field.
   * @param value the value to set.
   */
  public void setImages(String value) {
    this.images = value;
  }

  /**
   * Gets the value of the 'stocks' field.
   * @return The value of the 'stocks' field.
   */
  public String getStocks() {
    return stocks;
  }

  /**
   * Sets the value of the 'stocks' field.
   * @param value the value to set.
   */
  public void setStocks(String value) {
    this.stocks = value;
  }

  /**
   * Gets the value of the 'tags' field.
   * @return The value of the 'tags' field.
   */
  public String getTags() {
    return tags;
  }

  /**
   * Sets the value of the 'tags' field.
   * @param value the value to set.
   */
  public void setTags(String value) {
    this.tags = value;
  }

  /**
   * Gets the value of the 'topic' field.
   * @return The value of the 'topic' field.
   */
  public String getTopic() {
    return topic;
  }

  /**
   * Sets the value of the 'topic' field.
   * @param value the value to set.
   */
  public void setTopic(String value) {
    this.topic = value;
  }

  /**
   * Gets the value of the 'valid' field.
   * @return The value of the 'valid' field.
   */
  public String getValid() {
    return valid;
  }

  /**
   * Sets the value of the 'valid' field.
   * @param value the value to set.
   */
  public void setValid(String value) {
    this.valid = value;
  }

  /**
   * Gets the value of the 'emotion_score' field.
   * @return The value of the 'emotion_score' field.
   */
  public String getEmotionScore() {
    return emotion_score;
  }

  /**
   * Sets the value of the 'emotion_score' field.
   * @param value the value to set.
   */
  public void setEmotionScore(String value) {
    this.emotion_score = value;
  }

  /**
   * Gets the value of the 'coefficient' field.
   * @return The value of the 'coefficient' field.
   */
  public Double getCoefficient() {
    return coefficient;
  }

  /**
   * Sets the value of the 'coefficient' field.
   * @param value the value to set.
   */
  public void setCoefficient(Double value) {
    this.coefficient = value;
  }

  /**
   * Gets the value of the 'type' field.
   * @return The value of the 'type' field.
   */
  public String getType() {
    return type;
  }

  /**
   * Sets the value of the 'type' field.
   * @param value the value to set.
   */
  public void setType(String value) {
    this.type = value;
  }

  /**
   * Gets the value of the 'field1' field.
   * @return The value of the 'field1' field.
   */
  public String getField1() {
    return field1;
  }

  /**
   * Sets the value of the 'field1' field.
   * @param value the value to set.
   */
  public void setField1(String value) {
    this.field1 = value;
  }

  /**
   * Gets the value of the 'field2' field.
   * @return The value of the 'field2' field.
   */
  public String getField2() {
    return field2;
  }

  /**
   * Sets the value of the 'field2' field.
   * @param value the value to set.
   */
  public void setField2(String value) {
    this.field2 = value;
  }

  /**
   * Gets the value of the 'field3' field.
   * @return The value of the 'field3' field.
   */
  public String getField3() {
    return field3;
  }

  /**
   * Sets the value of the 'field3' field.
   * @param value the value to set.
   */
  public void setField3(String value) {
    this.field3 = value;
  }

  /**
   * Gets the value of the 'field4' field.
   * @return The value of the 'field4' field.
   */
  public String getField4() {
    return field4;
  }

  /**
   * Sets the value of the 'field4' field.
   * @param value the value to set.
   */
  public void setField4(String value) {
    this.field4 = value;
  }

  /**
   * Gets the value of the 'field5' field.
   * @return The value of the 'field5' field.
   */
  public String getField5() {
    return field5;
  }

  /**
   * Sets the value of the 'field5' field.
   * @param value the value to set.
   */
  public void setField5(String value) {
    this.field5 = value;
  }

  /**
   * Gets the value of the 'field6' field.
   * @return The value of the 'field6' field.
   */
  public String getField6() {
    return field6;
  }

  /**
   * Sets the value of the 'field6' field.
   * @param value the value to set.
   */
  public void setField6(String value) {
    this.field6 = value;
  }

  /**
   * Gets the value of the 'field7' field.
   * @return The value of the 'field7' field.
   */
  public String getField7() {
    return field7;
  }

  /**
   * Sets the value of the 'field7' field.
   * @param value the value to set.
   */
  public void setField7(String value) {
    this.field7 = value;
  }

  /**
   * Gets the value of the 'field8' field.
   * @return The value of the 'field8' field.
   */
  public String getField8() {
    return field8;
  }

  /**
   * Sets the value of the 'field8' field.
   * @param value the value to set.
   */
  public void setField8(String value) {
    this.field8 = value;
  }

  /**
   * Gets the value of the 'field9' field.
   * @return The value of the 'field9' field.
   */
  public String getField9() {
    return field9;
  }

  /**
   * Sets the value of the 'field9' field.
   * @param value the value to set.
   */
  public void setField9(String value) {
    this.field9 = value;
  }

  /**
   * Gets the value of the 'field10' field.
   * @return The value of the 'field10' field.
   */
  public String getField10() {
    return field10;
  }

  /**
   * Sets the value of the 'field10' field.
   * @param value the value to set.
   */
  public void setField10(String value) {
    this.field10 = value;
  }

  /**
   * Creates a new GeneralNewsInfo RecordBuilder.
   * @return A new GeneralNewsInfo RecordBuilder
   */
  public static Builder newBuilder() {
    return new Builder();
  }

  /**
   * Creates a new GeneralNewsInfo RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new GeneralNewsInfo RecordBuilder
   */
  public static Builder newBuilder(Builder other) {
    return new Builder(other);
  }

  /**
   * Creates a new GeneralNewsInfo RecordBuilder by copying an existing GeneralNewsInfo instance.
   * @param other The existing instance to copy.
   * @return A new GeneralNewsInfo RecordBuilder
   */
  public static Builder newBuilder(GeneralNewsInfo other) {
    return new Builder(other);
  }

  /**
   * RecordBuilder for GeneralNewsInfo instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<GeneralNewsInfo>
    implements org.apache.avro.data.RecordBuilder<GeneralNewsInfo> {

    private String rowkey;
    private String news_repository_id;
    private String news_id;
    private long publish_time;
    private long update_time;
    private String media;
    private String source;
    private String category;
    private String title;
    private String short_title;
    private String content;
    private String summary;
    private String url;
    private long record_date;
    private String author;
    private String writer;
    private String category_code;
    private String area_code;
    private String level;
    private String images;
    private String stocks;
    private String tags;
    private String topic;
    private String valid;
    private String emotion_score;
    private double coefficient;
    private String type;
    private String field1;
    private String field2;
    private String field3;
    private String field4;
    private String field5;
    private String field6;
    private String field7;
    private String field8;
    private String field9;
    private String field10;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.rowkey)) {
        this.rowkey = data().deepCopy(fields()[0].schema(), other.rowkey);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.news_repository_id)) {
        this.news_repository_id = data().deepCopy(fields()[1].schema(), other.news_repository_id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.news_id)) {
        this.news_id = data().deepCopy(fields()[2].schema(), other.news_id);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.publish_time)) {
        this.publish_time = data().deepCopy(fields()[3].schema(), other.publish_time);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.update_time)) {
        this.update_time = data().deepCopy(fields()[4].schema(), other.update_time);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.media)) {
        this.media = data().deepCopy(fields()[5].schema(), other.media);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.source)) {
        this.source = data().deepCopy(fields()[6].schema(), other.source);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.category)) {
        this.category = data().deepCopy(fields()[7].schema(), other.category);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.title)) {
        this.title = data().deepCopy(fields()[8].schema(), other.title);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.short_title)) {
        this.short_title = data().deepCopy(fields()[9].schema(), other.short_title);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.content)) {
        this.content = data().deepCopy(fields()[10].schema(), other.content);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.summary)) {
        this.summary = data().deepCopy(fields()[11].schema(), other.summary);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.url)) {
        this.url = data().deepCopy(fields()[12].schema(), other.url);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.record_date)) {
        this.record_date = data().deepCopy(fields()[13].schema(), other.record_date);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.author)) {
        this.author = data().deepCopy(fields()[14].schema(), other.author);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.writer)) {
        this.writer = data().deepCopy(fields()[15].schema(), other.writer);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.category_code)) {
        this.category_code = data().deepCopy(fields()[16].schema(), other.category_code);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.area_code)) {
        this.area_code = data().deepCopy(fields()[17].schema(), other.area_code);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.level)) {
        this.level = data().deepCopy(fields()[18].schema(), other.level);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.images)) {
        this.images = data().deepCopy(fields()[19].schema(), other.images);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.stocks)) {
        this.stocks = data().deepCopy(fields()[20].schema(), other.stocks);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.tags)) {
        this.tags = data().deepCopy(fields()[21].schema(), other.tags);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.topic)) {
        this.topic = data().deepCopy(fields()[22].schema(), other.topic);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.valid)) {
        this.valid = data().deepCopy(fields()[23].schema(), other.valid);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.emotion_score)) {
        this.emotion_score = data().deepCopy(fields()[24].schema(), other.emotion_score);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.coefficient)) {
        this.coefficient = data().deepCopy(fields()[25].schema(), other.coefficient);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.type)) {
        this.type = data().deepCopy(fields()[26].schema(), other.type);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.field1)) {
        this.field1 = data().deepCopy(fields()[27].schema(), other.field1);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.field2)) {
        this.field2 = data().deepCopy(fields()[28].schema(), other.field2);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.field3)) {
        this.field3 = data().deepCopy(fields()[29].schema(), other.field3);
        fieldSetFlags()[29] = true;
      }
      if (isValidValue(fields()[30], other.field4)) {
        this.field4 = data().deepCopy(fields()[30].schema(), other.field4);
        fieldSetFlags()[30] = true;
      }
      if (isValidValue(fields()[31], other.field5)) {
        this.field5 = data().deepCopy(fields()[31].schema(), other.field5);
        fieldSetFlags()[31] = true;
      }
      if (isValidValue(fields()[32], other.field6)) {
        this.field6 = data().deepCopy(fields()[32].schema(), other.field6);
        fieldSetFlags()[32] = true;
      }
      if (isValidValue(fields()[33], other.field7)) {
        this.field7 = data().deepCopy(fields()[33].schema(), other.field7);
        fieldSetFlags()[33] = true;
      }
      if (isValidValue(fields()[34], other.field8)) {
        this.field8 = data().deepCopy(fields()[34].schema(), other.field8);
        fieldSetFlags()[34] = true;
      }
      if (isValidValue(fields()[35], other.field9)) {
        this.field9 = data().deepCopy(fields()[35].schema(), other.field9);
        fieldSetFlags()[35] = true;
      }
      if (isValidValue(fields()[36], other.field10)) {
        this.field10 = data().deepCopy(fields()[36].schema(), other.field10);
        fieldSetFlags()[36] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing GeneralNewsInfo instance
     * @param other The existing instance to copy.
     */
    private Builder(GeneralNewsInfo other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.rowkey)) {
        this.rowkey = data().deepCopy(fields()[0].schema(), other.rowkey);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.news_repository_id)) {
        this.news_repository_id = data().deepCopy(fields()[1].schema(), other.news_repository_id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.news_id)) {
        this.news_id = data().deepCopy(fields()[2].schema(), other.news_id);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.publish_time)) {
        this.publish_time = data().deepCopy(fields()[3].schema(), other.publish_time);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.update_time)) {
        this.update_time = data().deepCopy(fields()[4].schema(), other.update_time);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.media)) {
        this.media = data().deepCopy(fields()[5].schema(), other.media);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.source)) {
        this.source = data().deepCopy(fields()[6].schema(), other.source);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.category)) {
        this.category = data().deepCopy(fields()[7].schema(), other.category);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.title)) {
        this.title = data().deepCopy(fields()[8].schema(), other.title);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.short_title)) {
        this.short_title = data().deepCopy(fields()[9].schema(), other.short_title);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.content)) {
        this.content = data().deepCopy(fields()[10].schema(), other.content);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.summary)) {
        this.summary = data().deepCopy(fields()[11].schema(), other.summary);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.url)) {
        this.url = data().deepCopy(fields()[12].schema(), other.url);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.record_date)) {
        this.record_date = data().deepCopy(fields()[13].schema(), other.record_date);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.author)) {
        this.author = data().deepCopy(fields()[14].schema(), other.author);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.writer)) {
        this.writer = data().deepCopy(fields()[15].schema(), other.writer);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.category_code)) {
        this.category_code = data().deepCopy(fields()[16].schema(), other.category_code);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.area_code)) {
        this.area_code = data().deepCopy(fields()[17].schema(), other.area_code);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.level)) {
        this.level = data().deepCopy(fields()[18].schema(), other.level);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.images)) {
        this.images = data().deepCopy(fields()[19].schema(), other.images);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.stocks)) {
        this.stocks = data().deepCopy(fields()[20].schema(), other.stocks);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.tags)) {
        this.tags = data().deepCopy(fields()[21].schema(), other.tags);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.topic)) {
        this.topic = data().deepCopy(fields()[22].schema(), other.topic);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.valid)) {
        this.valid = data().deepCopy(fields()[23].schema(), other.valid);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.emotion_score)) {
        this.emotion_score = data().deepCopy(fields()[24].schema(), other.emotion_score);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.coefficient)) {
        this.coefficient = data().deepCopy(fields()[25].schema(), other.coefficient);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.type)) {
        this.type = data().deepCopy(fields()[26].schema(), other.type);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.field1)) {
        this.field1 = data().deepCopy(fields()[27].schema(), other.field1);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.field2)) {
        this.field2 = data().deepCopy(fields()[28].schema(), other.field2);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.field3)) {
        this.field3 = data().deepCopy(fields()[29].schema(), other.field3);
        fieldSetFlags()[29] = true;
      }
      if (isValidValue(fields()[30], other.field4)) {
        this.field4 = data().deepCopy(fields()[30].schema(), other.field4);
        fieldSetFlags()[30] = true;
      }
      if (isValidValue(fields()[31], other.field5)) {
        this.field5 = data().deepCopy(fields()[31].schema(), other.field5);
        fieldSetFlags()[31] = true;
      }
      if (isValidValue(fields()[32], other.field6)) {
        this.field6 = data().deepCopy(fields()[32].schema(), other.field6);
        fieldSetFlags()[32] = true;
      }
      if (isValidValue(fields()[33], other.field7)) {
        this.field7 = data().deepCopy(fields()[33].schema(), other.field7);
        fieldSetFlags()[33] = true;
      }
      if (isValidValue(fields()[34], other.field8)) {
        this.field8 = data().deepCopy(fields()[34].schema(), other.field8);
        fieldSetFlags()[34] = true;
      }
      if (isValidValue(fields()[35], other.field9)) {
        this.field9 = data().deepCopy(fields()[35].schema(), other.field9);
        fieldSetFlags()[35] = true;
      }
      if (isValidValue(fields()[36], other.field10)) {
        this.field10 = data().deepCopy(fields()[36].schema(), other.field10);
        fieldSetFlags()[36] = true;
      }
    }

    /**
      * Gets the value of the 'rowkey' field.
      * @return The value.
      */
    public String getRowkey() {
      return rowkey;
    }

    /**
      * Sets the value of the 'rowkey' field.
      * @param value The value of 'rowkey'.
      * @return This builder.
      */
    public Builder setRowkey(String value) {
      validate(fields()[0], value);
      this.rowkey = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'rowkey' field has been set.
      * @return True if the 'rowkey' field has been set, false otherwise.
      */
    public boolean hasRowkey() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'rowkey' field.
      * @return This builder.
      */
    public Builder clearRowkey() {
      rowkey = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'news_repository_id' field.
      * @return The value.
      */
    public String getNewsRepositoryId() {
      return news_repository_id;
    }

    /**
      * Sets the value of the 'news_repository_id' field.
      * @param value The value of 'news_repository_id'.
      * @return This builder.
      */
    public Builder setNewsRepositoryId(String value) {
      validate(fields()[1], value);
      this.news_repository_id = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'news_repository_id' field has been set.
      * @return True if the 'news_repository_id' field has been set, false otherwise.
      */
    public boolean hasNewsRepositoryId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'news_repository_id' field.
      * @return This builder.
      */
    public Builder clearNewsRepositoryId() {
      news_repository_id = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'news_id' field.
      * @return The value.
      */
    public String getNewsId() {
      return news_id;
    }

    /**
      * Sets the value of the 'news_id' field.
      * @param value The value of 'news_id'.
      * @return This builder.
      */
    public Builder setNewsId(String value) {
      validate(fields()[2], value);
      this.news_id = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'news_id' field has been set.
      * @return True if the 'news_id' field has been set, false otherwise.
      */
    public boolean hasNewsId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'news_id' field.
      * @return This builder.
      */
    public Builder clearNewsId() {
      news_id = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'publish_time' field.
      * @return The value.
      */
    public Long getPublishTime() {
      return publish_time;
    }

    /**
      * Sets the value of the 'publish_time' field.
      * @param value The value of 'publish_time'.
      * @return This builder.
      */
    public Builder setPublishTime(long value) {
      validate(fields()[3], value);
      this.publish_time = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'publish_time' field has been set.
      * @return True if the 'publish_time' field has been set, false otherwise.
      */
    public boolean hasPublishTime() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'publish_time' field.
      * @return This builder.
      */
    public Builder clearPublishTime() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'update_time' field.
      * @return The value.
      */
    public Long getUpdateTime() {
      return update_time;
    }

    /**
      * Sets the value of the 'update_time' field.
      * @param value The value of 'update_time'.
      * @return This builder.
      */
    public Builder setUpdateTime(long value) {
      validate(fields()[4], value);
      this.update_time = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'update_time' field has been set.
      * @return True if the 'update_time' field has been set, false otherwise.
      */
    public boolean hasUpdateTime() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'update_time' field.
      * @return This builder.
      */
    public Builder clearUpdateTime() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'media' field.
      * @return The value.
      */
    public String getMedia() {
      return media;
    }

    /**
      * Sets the value of the 'media' field.
      * @param value The value of 'media'.
      * @return This builder.
      */
    public Builder setMedia(String value) {
      validate(fields()[5], value);
      this.media = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'media' field has been set.
      * @return True if the 'media' field has been set, false otherwise.
      */
    public boolean hasMedia() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'media' field.
      * @return This builder.
      */
    public Builder clearMedia() {
      media = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'source' field.
      * @return The value.
      */
    public String getSource() {
      return source;
    }

    /**
      * Sets the value of the 'source' field.
      * @param value The value of 'source'.
      * @return This builder.
      */
    public Builder setSource(String value) {
      validate(fields()[6], value);
      this.source = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'source' field has been set.
      * @return True if the 'source' field has been set, false otherwise.
      */
    public boolean hasSource() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'source' field.
      * @return This builder.
      */
    public Builder clearSource() {
      source = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'category' field.
      * @return The value.
      */
    public String getCategory() {
      return category;
    }

    /**
      * Sets the value of the 'category' field.
      * @param value The value of 'category'.
      * @return This builder.
      */
    public Builder setCategory(String value) {
      validate(fields()[7], value);
      this.category = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'category' field has been set.
      * @return True if the 'category' field has been set, false otherwise.
      */
    public boolean hasCategory() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'category' field.
      * @return This builder.
      */
    public Builder clearCategory() {
      category = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'title' field.
      * @return The value.
      */
    public String getTitle() {
      return title;
    }

    /**
      * Sets the value of the 'title' field.
      * @param value The value of 'title'.
      * @return This builder.
      */
    public Builder setTitle(String value) {
      validate(fields()[8], value);
      this.title = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'title' field has been set.
      * @return True if the 'title' field has been set, false otherwise.
      */
    public boolean hasTitle() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'title' field.
      * @return This builder.
      */
    public Builder clearTitle() {
      title = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'short_title' field.
      * @return The value.
      */
    public String getShortTitle() {
      return short_title;
    }

    /**
      * Sets the value of the 'short_title' field.
      * @param value The value of 'short_title'.
      * @return This builder.
      */
    public Builder setShortTitle(String value) {
      validate(fields()[9], value);
      this.short_title = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'short_title' field has been set.
      * @return True if the 'short_title' field has been set, false otherwise.
      */
    public boolean hasShortTitle() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'short_title' field.
      * @return This builder.
      */
    public Builder clearShortTitle() {
      short_title = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'content' field.
      * @return The value.
      */
    public String getContent() {
      return content;
    }

    /**
      * Sets the value of the 'content' field.
      * @param value The value of 'content'.
      * @return This builder.
      */
    public Builder setContent(String value) {
      validate(fields()[10], value);
      this.content = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'content' field has been set.
      * @return True if the 'content' field has been set, false otherwise.
      */
    public boolean hasContent() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'content' field.
      * @return This builder.
      */
    public Builder clearContent() {
      content = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'summary' field.
      * @return The value.
      */
    public String getSummary() {
      return summary;
    }

    /**
      * Sets the value of the 'summary' field.
      * @param value The value of 'summary'.
      * @return This builder.
      */
    public Builder setSummary(String value) {
      validate(fields()[11], value);
      this.summary = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'summary' field has been set.
      * @return True if the 'summary' field has been set, false otherwise.
      */
    public boolean hasSummary() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'summary' field.
      * @return This builder.
      */
    public Builder clearSummary() {
      summary = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'url' field.
      * @return The value.
      */
    public String getUrl() {
      return url;
    }

    /**
      * Sets the value of the 'url' field.
      * @param value The value of 'url'.
      * @return This builder.
      */
    public Builder setUrl(String value) {
      validate(fields()[12], value);
      this.url = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'url' field has been set.
      * @return True if the 'url' field has been set, false otherwise.
      */
    public boolean hasUrl() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'url' field.
      * @return This builder.
      */
    public Builder clearUrl() {
      url = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'record_date' field.
      * @return The value.
      */
    public Long getRecordDate() {
      return record_date;
    }

    /**
      * Sets the value of the 'record_date' field.
      * @param value The value of 'record_date'.
      * @return This builder.
      */
    public Builder setRecordDate(long value) {
      validate(fields()[13], value);
      this.record_date = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'record_date' field has been set.
      * @return True if the 'record_date' field has been set, false otherwise.
      */
    public boolean hasRecordDate() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'record_date' field.
      * @return This builder.
      */
    public Builder clearRecordDate() {
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'author' field.
      * @return The value.
      */
    public String getAuthor() {
      return author;
    }

    /**
      * Sets the value of the 'author' field.
      * @param value The value of 'author'.
      * @return This builder.
      */
    public Builder setAuthor(String value) {
      validate(fields()[14], value);
      this.author = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'author' field has been set.
      * @return True if the 'author' field has been set, false otherwise.
      */
    public boolean hasAuthor() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'author' field.
      * @return This builder.
      */
    public Builder clearAuthor() {
      author = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'writer' field.
      * @return The value.
      */
    public String getWriter() {
      return writer;
    }

    /**
      * Sets the value of the 'writer' field.
      * @param value The value of 'writer'.
      * @return This builder.
      */
    public Builder setWriter(String value) {
      validate(fields()[15], value);
      this.writer = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'writer' field has been set.
      * @return True if the 'writer' field has been set, false otherwise.
      */
    public boolean hasWriter() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'writer' field.
      * @return This builder.
      */
    public Builder clearWriter() {
      writer = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'category_code' field.
      * @return The value.
      */
    public String getCategoryCode() {
      return category_code;
    }

    /**
      * Sets the value of the 'category_code' field.
      * @param value The value of 'category_code'.
      * @return This builder.
      */
    public Builder setCategoryCode(String value) {
      validate(fields()[16], value);
      this.category_code = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'category_code' field has been set.
      * @return True if the 'category_code' field has been set, false otherwise.
      */
    public boolean hasCategoryCode() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'category_code' field.
      * @return This builder.
      */
    public Builder clearCategoryCode() {
      category_code = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'area_code' field.
      * @return The value.
      */
    public String getAreaCode() {
      return area_code;
    }

    /**
      * Sets the value of the 'area_code' field.
      * @param value The value of 'area_code'.
      * @return This builder.
      */
    public Builder setAreaCode(String value) {
      validate(fields()[17], value);
      this.area_code = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'area_code' field has been set.
      * @return True if the 'area_code' field has been set, false otherwise.
      */
    public boolean hasAreaCode() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'area_code' field.
      * @return This builder.
      */
    public Builder clearAreaCode() {
      area_code = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'level' field.
      * @return The value.
      */
    public String getLevel() {
      return level;
    }

    /**
      * Sets the value of the 'level' field.
      * @param value The value of 'level'.
      * @return This builder.
      */
    public Builder setLevel(String value) {
      validate(fields()[18], value);
      this.level = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'level' field has been set.
      * @return True if the 'level' field has been set, false otherwise.
      */
    public boolean hasLevel() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'level' field.
      * @return This builder.
      */
    public Builder clearLevel() {
      level = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'images' field.
      * @return The value.
      */
    public String getImages() {
      return images;
    }

    /**
      * Sets the value of the 'images' field.
      * @param value The value of 'images'.
      * @return This builder.
      */
    public Builder setImages(String value) {
      validate(fields()[19], value);
      this.images = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'images' field has been set.
      * @return True if the 'images' field has been set, false otherwise.
      */
    public boolean hasImages() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'images' field.
      * @return This builder.
      */
    public Builder clearImages() {
      images = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'stocks' field.
      * @return The value.
      */
    public String getStocks() {
      return stocks;
    }

    /**
      * Sets the value of the 'stocks' field.
      * @param value The value of 'stocks'.
      * @return This builder.
      */
    public Builder setStocks(String value) {
      validate(fields()[20], value);
      this.stocks = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
      * Checks whether the 'stocks' field has been set.
      * @return True if the 'stocks' field has been set, false otherwise.
      */
    public boolean hasStocks() {
      return fieldSetFlags()[20];
    }


    /**
      * Clears the value of the 'stocks' field.
      * @return This builder.
      */
    public Builder clearStocks() {
      stocks = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    /**
      * Gets the value of the 'tags' field.
      * @return The value.
      */
    public String getTags() {
      return tags;
    }

    /**
      * Sets the value of the 'tags' field.
      * @param value The value of 'tags'.
      * @return This builder.
      */
    public Builder setTags(String value) {
      validate(fields()[21], value);
      this.tags = value;
      fieldSetFlags()[21] = true;
      return this;
    }

    /**
      * Checks whether the 'tags' field has been set.
      * @return True if the 'tags' field has been set, false otherwise.
      */
    public boolean hasTags() {
      return fieldSetFlags()[21];
    }


    /**
      * Clears the value of the 'tags' field.
      * @return This builder.
      */
    public Builder clearTags() {
      tags = null;
      fieldSetFlags()[21] = false;
      return this;
    }

    /**
      * Gets the value of the 'topic' field.
      * @return The value.
      */
    public String getTopic() {
      return topic;
    }

    /**
      * Sets the value of the 'topic' field.
      * @param value The value of 'topic'.
      * @return This builder.
      */
    public Builder setTopic(String value) {
      validate(fields()[22], value);
      this.topic = value;
      fieldSetFlags()[22] = true;
      return this;
    }

    /**
      * Checks whether the 'topic' field has been set.
      * @return True if the 'topic' field has been set, false otherwise.
      */
    public boolean hasTopic() {
      return fieldSetFlags()[22];
    }


    /**
      * Clears the value of the 'topic' field.
      * @return This builder.
      */
    public Builder clearTopic() {
      topic = null;
      fieldSetFlags()[22] = false;
      return this;
    }

    /**
      * Gets the value of the 'valid' field.
      * @return The value.
      */
    public String getValid() {
      return valid;
    }

    /**
      * Sets the value of the 'valid' field.
      * @param value The value of 'valid'.
      * @return This builder.
      */
    public Builder setValid(String value) {
      validate(fields()[23], value);
      this.valid = value;
      fieldSetFlags()[23] = true;
      return this;
    }

    /**
      * Checks whether the 'valid' field has been set.
      * @return True if the 'valid' field has been set, false otherwise.
      */
    public boolean hasValid() {
      return fieldSetFlags()[23];
    }


    /**
      * Clears the value of the 'valid' field.
      * @return This builder.
      */
    public Builder clearValid() {
      valid = null;
      fieldSetFlags()[23] = false;
      return this;
    }

    /**
      * Gets the value of the 'emotion_score' field.
      * @return The value.
      */
    public String getEmotionScore() {
      return emotion_score;
    }

    /**
      * Sets the value of the 'emotion_score' field.
      * @param value The value of 'emotion_score'.
      * @return This builder.
      */
    public Builder setEmotionScore(String value) {
      validate(fields()[24], value);
      this.emotion_score = value;
      fieldSetFlags()[24] = true;
      return this;
    }

    /**
      * Checks whether the 'emotion_score' field has been set.
      * @return True if the 'emotion_score' field has been set, false otherwise.
      */
    public boolean hasEmotionScore() {
      return fieldSetFlags()[24];
    }


    /**
      * Clears the value of the 'emotion_score' field.
      * @return This builder.
      */
    public Builder clearEmotionScore() {
      emotion_score = null;
      fieldSetFlags()[24] = false;
      return this;
    }

    /**
      * Gets the value of the 'coefficient' field.
      * @return The value.
      */
    public Double getCoefficient() {
      return coefficient;
    }

    /**
      * Sets the value of the 'coefficient' field.
      * @param value The value of 'coefficient'.
      * @return This builder.
      */
    public Builder setCoefficient(double value) {
      validate(fields()[25], value);
      this.coefficient = value;
      fieldSetFlags()[25] = true;
      return this;
    }

    /**
      * Checks whether the 'coefficient' field has been set.
      * @return True if the 'coefficient' field has been set, false otherwise.
      */
    public boolean hasCoefficient() {
      return fieldSetFlags()[25];
    }


    /**
      * Clears the value of the 'coefficient' field.
      * @return This builder.
      */
    public Builder clearCoefficient() {
      fieldSetFlags()[25] = false;
      return this;
    }

    /**
      * Gets the value of the 'type' field.
      * @return The value.
      */
    public String getType() {
      return type;
    }

    /**
      * Sets the value of the 'type' field.
      * @param value The value of 'type'.
      * @return This builder.
      */
    public Builder setType(String value) {
      validate(fields()[26], value);
      this.type = value;
      fieldSetFlags()[26] = true;
      return this;
    }

    /**
      * Checks whether the 'type' field has been set.
      * @return True if the 'type' field has been set, false otherwise.
      */
    public boolean hasType() {
      return fieldSetFlags()[26];
    }


    /**
      * Clears the value of the 'type' field.
      * @return This builder.
      */
    public Builder clearType() {
      type = null;
      fieldSetFlags()[26] = false;
      return this;
    }

    /**
      * Gets the value of the 'field1' field.
      * @return The value.
      */
    public String getField1() {
      return field1;
    }

    /**
      * Sets the value of the 'field1' field.
      * @param value The value of 'field1'.
      * @return This builder.
      */
    public Builder setField1(String value) {
      validate(fields()[27], value);
      this.field1 = value;
      fieldSetFlags()[27] = true;
      return this;
    }

    /**
      * Checks whether the 'field1' field has been set.
      * @return True if the 'field1' field has been set, false otherwise.
      */
    public boolean hasField1() {
      return fieldSetFlags()[27];
    }


    /**
      * Clears the value of the 'field1' field.
      * @return This builder.
      */
    public Builder clearField1() {
      field1 = null;
      fieldSetFlags()[27] = false;
      return this;
    }

    /**
      * Gets the value of the 'field2' field.
      * @return The value.
      */
    public String getField2() {
      return field2;
    }

    /**
      * Sets the value of the 'field2' field.
      * @param value The value of 'field2'.
      * @return This builder.
      */
    public Builder setField2(String value) {
      validate(fields()[28], value);
      this.field2 = value;
      fieldSetFlags()[28] = true;
      return this;
    }

    /**
      * Checks whether the 'field2' field has been set.
      * @return True if the 'field2' field has been set, false otherwise.
      */
    public boolean hasField2() {
      return fieldSetFlags()[28];
    }


    /**
      * Clears the value of the 'field2' field.
      * @return This builder.
      */
    public Builder clearField2() {
      field2 = null;
      fieldSetFlags()[28] = false;
      return this;
    }

    /**
      * Gets the value of the 'field3' field.
      * @return The value.
      */
    public String getField3() {
      return field3;
    }

    /**
      * Sets the value of the 'field3' field.
      * @param value The value of 'field3'.
      * @return This builder.
      */
    public Builder setField3(String value) {
      validate(fields()[29], value);
      this.field3 = value;
      fieldSetFlags()[29] = true;
      return this;
    }

    /**
      * Checks whether the 'field3' field has been set.
      * @return True if the 'field3' field has been set, false otherwise.
      */
    public boolean hasField3() {
      return fieldSetFlags()[29];
    }


    /**
      * Clears the value of the 'field3' field.
      * @return This builder.
      */
    public Builder clearField3() {
      field3 = null;
      fieldSetFlags()[29] = false;
      return this;
    }

    /**
      * Gets the value of the 'field4' field.
      * @return The value.
      */
    public String getField4() {
      return field4;
    }

    /**
      * Sets the value of the 'field4' field.
      * @param value The value of 'field4'.
      * @return This builder.
      */
    public Builder setField4(String value) {
      validate(fields()[30], value);
      this.field4 = value;
      fieldSetFlags()[30] = true;
      return this;
    }

    /**
      * Checks whether the 'field4' field has been set.
      * @return True if the 'field4' field has been set, false otherwise.
      */
    public boolean hasField4() {
      return fieldSetFlags()[30];
    }


    /**
      * Clears the value of the 'field4' field.
      * @return This builder.
      */
    public Builder clearField4() {
      field4 = null;
      fieldSetFlags()[30] = false;
      return this;
    }

    /**
      * Gets the value of the 'field5' field.
      * @return The value.
      */
    public String getField5() {
      return field5;
    }

    /**
      * Sets the value of the 'field5' field.
      * @param value The value of 'field5'.
      * @return This builder.
      */
    public Builder setField5(String value) {
      validate(fields()[31], value);
      this.field5 = value;
      fieldSetFlags()[31] = true;
      return this;
    }

    /**
      * Checks whether the 'field5' field has been set.
      * @return True if the 'field5' field has been set, false otherwise.
      */
    public boolean hasField5() {
      return fieldSetFlags()[31];
    }


    /**
      * Clears the value of the 'field5' field.
      * @return This builder.
      */
    public Builder clearField5() {
      field5 = null;
      fieldSetFlags()[31] = false;
      return this;
    }

    /**
      * Gets the value of the 'field6' field.
      * @return The value.
      */
    public String getField6() {
      return field6;
    }

    /**
      * Sets the value of the 'field6' field.
      * @param value The value of 'field6'.
      * @return This builder.
      */
    public Builder setField6(String value) {
      validate(fields()[32], value);
      this.field6 = value;
      fieldSetFlags()[32] = true;
      return this;
    }

    /**
      * Checks whether the 'field6' field has been set.
      * @return True if the 'field6' field has been set, false otherwise.
      */
    public boolean hasField6() {
      return fieldSetFlags()[32];
    }


    /**
      * Clears the value of the 'field6' field.
      * @return This builder.
      */
    public Builder clearField6() {
      field6 = null;
      fieldSetFlags()[32] = false;
      return this;
    }

    /**
      * Gets the value of the 'field7' field.
      * @return The value.
      */
    public String getField7() {
      return field7;
    }

    /**
      * Sets the value of the 'field7' field.
      * @param value The value of 'field7'.
      * @return This builder.
      */
    public Builder setField7(String value) {
      validate(fields()[33], value);
      this.field7 = value;
      fieldSetFlags()[33] = true;
      return this;
    }

    /**
      * Checks whether the 'field7' field has been set.
      * @return True if the 'field7' field has been set, false otherwise.
      */
    public boolean hasField7() {
      return fieldSetFlags()[33];
    }


    /**
      * Clears the value of the 'field7' field.
      * @return This builder.
      */
    public Builder clearField7() {
      field7 = null;
      fieldSetFlags()[33] = false;
      return this;
    }

    /**
      * Gets the value of the 'field8' field.
      * @return The value.
      */
    public String getField8() {
      return field8;
    }

    /**
      * Sets the value of the 'field8' field.
      * @param value The value of 'field8'.
      * @return This builder.
      */
    public Builder setField8(String value) {
      validate(fields()[34], value);
      this.field8 = value;
      fieldSetFlags()[34] = true;
      return this;
    }

    /**
      * Checks whether the 'field8' field has been set.
      * @return True if the 'field8' field has been set, false otherwise.
      */
    public boolean hasField8() {
      return fieldSetFlags()[34];
    }


    /**
      * Clears the value of the 'field8' field.
      * @return This builder.
      */
    public Builder clearField8() {
      field8 = null;
      fieldSetFlags()[34] = false;
      return this;
    }

    /**
      * Gets the value of the 'field9' field.
      * @return The value.
      */
    public String getField9() {
      return field9;
    }

    /**
      * Sets the value of the 'field9' field.
      * @param value The value of 'field9'.
      * @return This builder.
      */
    public Builder setField9(String value) {
      validate(fields()[35], value);
      this.field9 = value;
      fieldSetFlags()[35] = true;
      return this;
    }

    /**
      * Checks whether the 'field9' field has been set.
      * @return True if the 'field9' field has been set, false otherwise.
      */
    public boolean hasField9() {
      return fieldSetFlags()[35];
    }


    /**
      * Clears the value of the 'field9' field.
      * @return This builder.
      */
    public Builder clearField9() {
      field9 = null;
      fieldSetFlags()[35] = false;
      return this;
    }

    /**
      * Gets the value of the 'field10' field.
      * @return The value.
      */
    public String getField10() {
      return field10;
    }

    /**
      * Sets the value of the 'field10' field.
      * @param value The value of 'field10'.
      * @return This builder.
      */
    public Builder setField10(String value) {
      validate(fields()[36], value);
      this.field10 = value;
      fieldSetFlags()[36] = true;
      return this;
    }

    /**
      * Checks whether the 'field10' field has been set.
      * @return True if the 'field10' field has been set, false otherwise.
      */
    public boolean hasField10() {
      return fieldSetFlags()[36];
    }


    /**
      * Clears the value of the 'field10' field.
      * @return This builder.
      */
    public Builder clearField10() {
      field10 = null;
      fieldSetFlags()[36] = false;
      return this;
    }

    @Override
    public GeneralNewsInfo build() {
      try {
        GeneralNewsInfo record = new GeneralNewsInfo();
        record.rowkey = fieldSetFlags()[0] ? this.rowkey : (String) defaultValue(fields()[0]);
        record.news_repository_id = fieldSetFlags()[1] ? this.news_repository_id : (String) defaultValue(fields()[1]);
        record.news_id = fieldSetFlags()[2] ? this.news_id : (String) defaultValue(fields()[2]);
        record.publish_time = fieldSetFlags()[3] ? this.publish_time : (Long) defaultValue(fields()[3]);
        record.update_time = fieldSetFlags()[4] ? this.update_time : (Long) defaultValue(fields()[4]);
        record.media = fieldSetFlags()[5] ? this.media : (String) defaultValue(fields()[5]);
        record.source = fieldSetFlags()[6] ? this.source : (String) defaultValue(fields()[6]);
        record.category = fieldSetFlags()[7] ? this.category : (String) defaultValue(fields()[7]);
        record.title = fieldSetFlags()[8] ? this.title : (String) defaultValue(fields()[8]);
        record.short_title = fieldSetFlags()[9] ? this.short_title : (String) defaultValue(fields()[9]);
        record.content = fieldSetFlags()[10] ? this.content : (String) defaultValue(fields()[10]);
        record.summary = fieldSetFlags()[11] ? this.summary : (String) defaultValue(fields()[11]);
        record.url = fieldSetFlags()[12] ? this.url : (String) defaultValue(fields()[12]);
        record.record_date = fieldSetFlags()[13] ? this.record_date : (Long) defaultValue(fields()[13]);
        record.author = fieldSetFlags()[14] ? this.author : (String) defaultValue(fields()[14]);
        record.writer = fieldSetFlags()[15] ? this.writer : (String) defaultValue(fields()[15]);
        record.category_code = fieldSetFlags()[16] ? this.category_code : (String) defaultValue(fields()[16]);
        record.area_code = fieldSetFlags()[17] ? this.area_code : (String) defaultValue(fields()[17]);
        record.level = fieldSetFlags()[18] ? this.level : (String) defaultValue(fields()[18]);
        record.images = fieldSetFlags()[19] ? this.images : (String) defaultValue(fields()[19]);
        record.stocks = fieldSetFlags()[20] ? this.stocks : (String) defaultValue(fields()[20]);
        record.tags = fieldSetFlags()[21] ? this.tags : (String) defaultValue(fields()[21]);
        record.topic = fieldSetFlags()[22] ? this.topic : (String) defaultValue(fields()[22]);
        record.valid = fieldSetFlags()[23] ? this.valid : (String) defaultValue(fields()[23]);
        record.emotion_score = fieldSetFlags()[24] ? this.emotion_score : (String) defaultValue(fields()[24]);
        record.coefficient = fieldSetFlags()[25] ? this.coefficient : (Double) defaultValue(fields()[25]);
        record.type = fieldSetFlags()[26] ? this.type : (String) defaultValue(fields()[26]);
        record.field1 = fieldSetFlags()[27] ? this.field1 : (String) defaultValue(fields()[27]);
        record.field2 = fieldSetFlags()[28] ? this.field2 : (String) defaultValue(fields()[28]);
        record.field3 = fieldSetFlags()[29] ? this.field3 : (String) defaultValue(fields()[29]);
        record.field4 = fieldSetFlags()[30] ? this.field4 : (String) defaultValue(fields()[30]);
        record.field5 = fieldSetFlags()[31] ? this.field5 : (String) defaultValue(fields()[31]);
        record.field6 = fieldSetFlags()[32] ? this.field6 : (String) defaultValue(fields()[32]);
        record.field7 = fieldSetFlags()[33] ? this.field7 : (String) defaultValue(fields()[33]);
        record.field8 = fieldSetFlags()[34] ? this.field8 : (String) defaultValue(fields()[34]);
        record.field9 = fieldSetFlags()[35] ? this.field9 : (String) defaultValue(fields()[35]);
        record.field10 = fieldSetFlags()[36] ? this.field10 : (String) defaultValue(fields()[36]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
